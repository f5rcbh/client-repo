@forward "global";
@use "./responsive/breakpoint" as break;
@use "./fonts/colors" as color;
@use "./fonts/text" as text;
@use "./responsive/layouts" as layout;

body {
  background: url(../img/downWave.svg) no-repeat;
  background-size: cover;
  background-position: bottom;
  background-color: color.$white;
  width: 100vw;
  height: 100vh;
  @include break.breakpoint(medium) {
    background-position: center;
    height: auto;
  }

  // the main page
  .info-page {
    @include layout.flexCenter();
    flex-direction: column;
    align-items: stretch;
    height: 100%;
    justify-items: stretch;
    @include break.breakpoint(largePhone) {
      @include layout.gridCenter();
      grid-template-columns: 1fr;
    }
    nav {
      @include layout.flexCenter();
      margin: 1rem 5rem;
      @include break.breakpoint(largePhone) {
        width: 80%;
      }
      .hambar {
        display: none;
        @include break.breakpoint(largePhone) {
          display: block;

          width: 50px;
          height: auto;
          z-index: 3;
        }
      }
      h1 {
        font-size: text.$XLargeSize;

        a {
          text-decoration: none;
          color: inherit;
        }
        @include break.breakpoint(small) {
          font-size: text.$largeSize;
        }
        @include break.breakpoint(largePhone) {
          font-size: text.$midSize;
          margin-right: auto;
        }
      }
      div {
        @include layout.flexCenter();
        justify-content: space-evenly;
        font-size: text.$midSize;

        margin: auto;
        width: 100%;
        @include break.breakpoint(largePhone) {
          display: none;
          justify-content: flex-start;
          position: fixed;
          flex-direction: column;
          inset: 0;
          right: -25rem;
          z-index: 2;
          background-color: color.$white;
        }
        @include break.breakpoint(small) {
          font-size: text.$halfSmall;
        }

        a {
          @include break.breakpoint(largePhone) {
            padding: 5rem 0;
          }
          text-decoration: none;
          color: #000;
        }
      }
    }

    // navber
    //end of the nav bar

    // this is for the info box
    .info-box {
      @include layout.flexCenter();
      justify-content: space-around;
      align-items: stretch;
      background-color: color.$white;
      box-shadow: -10px 10px 5px #c1c1c1, 10px -10px 5px #c1c1c1;
      border-radius: 20px;
      margin: auto;
      width: 60%;
      aspect-ratio: 2/1;
      overflow: visible;
      // responsive
      @include break.breakpoint(large) {
        width: 70rem;
      }
      @include break.breakpoint(medium) {
        width: 60rem;
      }
      @include break.breakpoint(small) {
        width: 40rem;
      }
      @include break.breakpoint(largePhone) {
        margin: 2rem auto;
        grid-template-columns: 1fr;
        width: 25rem;
      }
      @include break.breakpoint(mediumPhone) {
        @include layout.flexCenter();
        flex-direction: column;
        width: 20rem;
      }

      //for the left side pic
      .profilePic {
        // position: fixed;
        border-radius: 20px;
        object-fit: contain;
        width: 40%;
        order: 2;

        @include break.breakpoint(large) {
          width: 50%;
        }
        @include break.breakpoint(medium) {
          width: 90%;
        }

        @include break.breakpoint(largePhone) {
          width: 70%;
        }
      }
      // info styles
      .first-info {
        @include layout.flexCenter();
        flex-direction: column;
        margin: 1rem;
        row-gap: 1rem;
        width: auto;
        @include break.breakpoint(largePhone) {
          row-gap: 0;
        }

        // display: none;

        .input-layout,
        .experience {
          @include layout.gridCenter();
          flex-wrap: wrap;
          gap: 1rem;
          h1 {
            margin-left: auto;
            grid-column: 1/3;
            font-size: text.$largeSize;

            @include break.breakpoint(large) {
              font-size: text.$midSize;
            }
            @include break.breakpoint(largePhone) {
              font-size: text.$halfSmall;
            }
            @include break.breakpoint(mediumPhone) {
              margin: auto;
            }
          }

          @include break.breakpoint(large) {
            gap: 1rem 3rem;
          }
          @include break.breakpoint(largePhone) {
            @include layout.flexCenter();
            flex-direction: column;
            padding-bottom: 2rem;
          }
          .start-date,
          .end-date {
            fieldset {
              border: none;
              padding: 0.5rem 0;
              legend {
                font-size: text.$halfSmall;
              }
            }
            width: 100%;
            justify-content: space-evenly;
            select {
              margin: 0 1rem;
              width: 8rem;
              height: 2rem;
              border-radius: 10px;
              padding: 0.5rem;
              outline: none;
              option {
                font-size: text.$smallSize;
                border-radius: 10px;
                border: none;
              }
            }
          }
          .first-name,
          .last-name,
          .email,
          .phone,
          .linkedIn,
          .job,
          .job-name {
            font-family: "Segoe UI", sans-serif;
            position: relative;
            input {
              font-size: 100%;
              padding: 1em;
              outline: none;
              border: 2px solid rgb(200, 200, 200);
              background-color: transparent;
              border-radius: 20px;
              width: 20rem;
              @include break.breakpoint(large) {
                width: 13rem;
              }
              @include break.breakpoint(medium) {
                width: 12rem;
              }
              @include break.breakpoint(largePhone) {
                width: 20rem;
              }
              @include break.breakpoint(mediumPhone) {
                width: 15rem;
              }
            }

            label {
              font-size: 90%;
              position: absolute;
              right: 1.5rem;
              top: 0px;
              float: right;
              padding: 0.8em;
              margin-left: 0.5em;
              pointer-events: none;
              transition: all 0.3s ease;
              color: rgb(100, 100, 100);
            }

            :is(input:focus, input:valid) ~ label {
              transform: translateY(-50%) scale(0.9);
              margin: 0em;
              margin-left: 1.3em;
              padding: 0.4em;
              background-color: color.$white;
            }
            :is(input:focus, input:valid) {
              border-color: rgb(150, 150, 200);
            }
          }
          .phone {
            position: relative;
            width: 20rem;
            .help-div {
              position: absolute;
              top: 1rem;
              left: -2rem;
              .help {
                position: absolute;
                top: 0;
                left: 0;
                width: 1.5rem;
                cursor: pointer;
              }
              &:hover::after {
                position: absolute;
                top: -4.5rem;
                left: -11rem;
                content: "كتابة رقم الجوال تكون بهذا الشكل  96650xxxxxxx+";
                text-align: center;
                border-radius: 10px 10px 0 10px;
                color: color.$white;
                background-color: color.$black;
                width: 11rem;
                height: 4rem;
                font-size: 14px;
                padding: 10px;
              }
            }
            .selected-option {
              border-radius: 0.5rem 20px 20px 0.5rem;
              background-color: color.$lightGray;
              overflow: hidden;

              display: flex;
              justify-content: space-between;
              align-items: center;
              .flag {
                position: relative;
                direction: ltr;
                width: 7rem;
                text-align: center;
                cursor: pointer;
              }
            }
            input {
              width: 100%;
              padding: 1rem 0.6rem;
              font-size: 1.1rem;
              background-color: color.$white;
              outline: none;
              position: relative;
              direction: ltr;
            }
            label {
              top: 0rem;
              position: absolute;
            }
            .options {
              position: absolute;
              top: 4rem;

              width: 100%;
              background-color: #fff;
              border-radius: 0.5rem;
              z-index: 10;

              display: none;
              &::before {
                position: absolute;
                content: "";
                left: 1rem;
                top: -1.2rem;

                width: 0;
                height: 0;
                border: 0.6rem solid transparent;
              }
              input {
                background-color: color.$active;
                color: #fff;
                border-radius: 0.5rem 0.5rem 0 0;
                padding: 1.4rem 1rem;
              }
            }
            .active {
              display: block;
            }

            ol {
              list-style: none;
              max-height: 23rem;
              overflow: overlay;
              &::-webkit-scrollbar {
                width: 0.6rem;
              }
              &::-webkit-scrollbar-thumb {
                width: 0.4rem;
                height: 3rem;
                background-color: #ccc;
                border-radius: 0.4rem;
              }
              li {
                padding: 1rem;
                display: flex;
                justify-content: space-between;
                cursor: pointer;
                &:not(:last-child) {
                  border-bottom: 0.1rem solid #eee;
                }
                &:hover {
                  background-color: lightcyan;
                }
                .country-name {
                  margin-left: 0.4rem;
                }
              }
              .hide {
                display: none;
              }
            }
          }
          .linkedIn {
            position: relative;
            grid-column: 1/3;
            input {
              width: 20rem;
              @include break.breakpoint(mediumPhone) {
                width: 18rem;
              }
            }
            button {
              position: absolute;
              top: 0.3rem;
              left: -6rem;
              width: 5rem;
              height: 3rem;
              font-size: text.$smallSize;
              border: none;
              border-radius: 10px;
              background-color: color.$active;
              cursor: pointer;
              @include break.breakpoint(largePhone) {
                top: 4rem;
                left: 0;
                width: 4rem;
                height: 2.5rem;
              }
              @include break.breakpoint(mediumPhone) {
                width: 3rem;
                height: 2rem;
                font-size: 0.7rem;
              }
            }
          }
          .end-date {
            position: relative;
            button {
              position: absolute;
              bottom: -3rem;
              left: 0.5rem;
              width: 5rem;
              height: 2rem;
              font-size: text.$smallSize;
              border: none;
              border-radius: 10px;
              background-color: color.$active;
              cursor: pointer;
            }
          }
          .expe-details {
            @include layout.flexCenter();
            flex-direction: column;
            align-items: flex-end;
            flex-wrap: wrap;
            grid-column: 1/3;
            margin: 1rem;
            @include break.breakpoint(small) {
              align-items: center;
            }
            @include break.breakpoint(mediumPhone) {
              margin-top: 3rem;
            }
            h1 {
              font-size: text.$halfSmall;
              margin-left: auto;
              @include break.breakpoint(medium) {
                font-size: text.$halfSmall;
              }
            }
            textarea {
              background-color: color.$lightGray;
              width: 30rem;
              height: 5rem;
              @include break.breakpoint(medium) {
                width: 20rem;
                font-size: 1rem;
              }
              @include break.breakpoint(small) {
                width: 20rem;
                height: 10rem;
              }
              @include break.breakpoint(mediumPhone) {
                width: 15rem;
                height: 5rem;
              }
            }
            .addExp {
              @include layout.flexCenter();
              flex-direction: column;
              justify-content: space-around;
              button {
                margin: 1rem;
                width: 5rem;
                height: 2rem;
                font-size: text.$halfSmall;
                border-radius: 20px;
                border: none;
                background-color: color.$active;
                cursor: pointer;
                @include break.breakpoint(small) {
                  width: 6rem;
                  font-size: text.$halfSmall;
                }
              }
            }
          }
        }

        // this is for the next page button
        .next {
          cursor: pointer;

          transition: all 0.2s;
          padding: 10px 20px;
          border-radius: 100px;
          background: #aceeed;
          border: 1px solid transparent;
          display: flex;
          align-items: center;
          font-size: text.$halfSmall;
          &:hover {
            background: #94eef8;
            svg {
              transform: translateX(5px);
            }
          }
          & > svg {
            width: 34px;
            margin-left: 10px;
            transition: transform 0.3s ease-in-out;
          }
          &:active {
            transform: scale(0.95);
          }
        }
        //end of the next page button
      }
      // for JS
      .hide {
        display: none;
      }
      //
      // next page layer

      // for JS stuff
    }
  }
}
